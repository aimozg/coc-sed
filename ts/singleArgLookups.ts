// Lookup dictionary for converting any single argument brackets into it's corresponding string
// basically [armor] results in the "[armor]" segment of the string being replaced with the
// results of the corresponding anonymous function, in this case: function(): any {return player.armorName;}
// tags not present in the singleArgConverters object return an error message.


// all the errors related to trying to parse stuff if not present are
// already handled in the various *Descript() functions.
// no need to duplicate them.

// Note: all key strings MUST be ENTIRELY lowercase.
const singleArgConverters: { [index: string]: (thiz: any) => any } = {
	"agility"               : () => "[Agility]",
	"allbreasts"            : () => kGAMECLASS.player.allBreastsDescript(),
	"alltits"               : () => kGAMECLASS.player.allBreastsDescript(),
	"armor"                 : () => kGAMECLASS.player.armorName,
	"armorname"             : () => kGAMECLASS.player.armorName,
	"ass"                   : () => kGAMECLASS.player.buttDescript(),
	"asshole"               : () => kGAMECLASS.player.assholeDescript(),
	"balls"                 : () => kGAMECLASS.player.ballsDescriptLight(),
	"bodytype"              : () => kGAMECLASS.player.bodyType(),
	"boyfriend"             : () => kGAMECLASS.player.mf("boyfriend", "girlfriend"),
	"breasts"               : () => kGAMECLASS.player.breastDescript(0),
	"butt"                  : () => kGAMECLASS.player.buttDescript(),
	"butthole"              : () => kGAMECLASS.player.assholeDescript(),
	"chest"                 : () => kGAMECLASS.player.chestDesc(),
	"claws"                 : () => kGAMECLASS.player.claws(),
	"clit"                  : () => kGAMECLASS.player.clitDescript(),
	"cock"                  : () => kGAMECLASS.player.cockDescript(0),
	"cockhead"              : () => kGAMECLASS.player.cockHead(0),
	"cocks"                 : () => kGAMECLASS.player.multiCockDescriptLight(),
	"cunt"                  : () => kGAMECLASS.player.vaginaDescript(),
	"eachcock"              : () => kGAMECLASS.player.sMultiCockDesc(),
	"evade"                 : () => "[Evade]",
	"eyes"                  : () => kGAMECLASS.player.eyesDescript(),
	"face"                  : () => kGAMECLASS.player.face(),
	"feet"                  : () => kGAMECLASS.player.feet(),
	"foot"                  : () => kGAMECLASS.player.foot(),
	"fullchest"             : () => kGAMECLASS.player.allChestDesc(),
	"hair"                  : () => kGAMECLASS.player.hairDescript(),
	"haircolor"             : () => kGAMECLASS.player.hairColor,
	"hairorfur"             : () => kGAMECLASS.player.hairOrFur(),
	"he"                    : () => kGAMECLASS.player.mf("he", "she"),
	"he2"                   : () => kGAMECLASS.player2.mf("he", "she"),
	"him"                   : () => kGAMECLASS.player.mf("him", "her"),
	"him2"                  : () => kGAMECLASS.player2.mf("him", "her"),
	"himself"               : () => kGAMECLASS.player.mf("himself", "herself"),
	"herself"               : () => kGAMECLASS.player.mf("himself", "herself"),
	"hips"                  : () => kGAMECLASS.player.hipDescript(),
	"his"                   : () => kGAMECLASS.player.mf("his", "her"),
	"his2"                  : () => kGAMECLASS.player2.mf("his", "her"),
	"horns"                 : () => kGAMECLASS.player.hornDescript(),
	"leg"                   : () => kGAMECLASS.player.leg(),
	"legs"                  : () => kGAMECLASS.player.legs(),
	"lowergarment"          : () => kGAMECLASS.player.lowerGarmentName,
	"man"                   : () => kGAMECLASS.player.mf("man", "woman"),
	"men"                   : () => kGAMECLASS.player.mf("men", "women"),
	"malefemaleherm"        : () => kGAMECLASS.player.maleFemaleHerm(),
	"master"                : () => kGAMECLASS.player.mf("master", "mistress"),
	"misdirection"          : () => "[Misdirection]",
	"multicock"             : () => kGAMECLASS.player.multiCockDescriptLight(),
	"multicockdescriptlight": () => kGAMECLASS.player.multiCockDescriptLight(),
	"name"                  : () => kGAMECLASS.player.short,
	"nipple"                : () => kGAMECLASS.player.nippleDescript(0),
	"nipples"               : () => kGAMECLASS.player.nippleDescript(0) + "s",
	"onecock"               : () => kGAMECLASS.player.oMultiCockDesc(),
	"pg"                    : () => "\n\n",
	"pussy"                 : () => kGAMECLASS.player.vaginaDescript(),
	"race"                  : () => kGAMECLASS.player.race(),
	"sack"                  : () => kGAMECLASS.player.sackDescript(),
	"sheath"                : () => kGAMECLASS.player.sheathDescript(),
	"shield"                : () => kGAMECLASS.player.shieldName,
	"skin.noadj"            : () => kGAMECLASS.player.skin(true),
	"skinfurscales"         : () => kGAMECLASS.player.skinFurScales(),
	"tallness"              : () => kGAMECLASS.measurements.footInchOrMetres(kGAMECLASS.player.tallness),
	"tits"                  : () => kGAMECLASS.player.breastDescript(0),
	"tongue"                : () => kGAMECLASS.player.tongueDescript(),
	"uppergarment"          : () => kGAMECLASS.player.upperGarmentName,
	"vag"                   : () => kGAMECLASS.player.vaginaDescript(),
	"vagina"                : () => kGAMECLASS.player.vaginaDescript(),
	"vagorass"              : () => (kGAMECLASS.player.hasVagina() ? kGAMECLASS.player.vaginaDescript() : kGAMECLASS.player.assholeDescript()),
	"weapon"                : () => kGAMECLASS.player.weaponName,
	"weaponname"            : () => kGAMECLASS.player.weaponName,
	"latexyname"            : () => kGAMECLASS.flags[kFLAGS.GOO_NAME],
	"bathgirlname"          : () => kGAMECLASS.flags[kFLAGS.MILK_NAME],
	"cockplural"            : () => (kGAMECLASS.player.cocks.length == 1) ? "cock" : "cocks",
	"dickplural"            : () => (kGAMECLASS.player.cocks.length == 1) ? "dick" : "dicks",
	"headplural"            : () => (kGAMECLASS.player.cocks.length == 1) ? "head" : "heads",
	"prickplural"           : () => (kGAMECLASS.player.cocks.length == 1) ? "prick" : "pricks",
	"boy"                   : () => kGAMECLASS.player.mf("boy", "girl"),
	"guy"                   : () => kGAMECLASS.player.mf("guy", "girl"),
	"wings"                 : () => kGAMECLASS.player.wingsDescript(),
	"tail"                  : () => kGAMECLASS.player.tailDescript(),
	"onetail"               : () => kGAMECLASS.player.oneTailDescript(),

//Prisoner
	"captortitle": () => kGAMECLASS.prison.prisonCaptor.captorTitle,
	"captorname" : () => kGAMECLASS.prison.prisonCaptor.captorName,
	"captorhe"   : () => kGAMECLASS.prison.prisonCaptor.captorPronoun1,
	"captorhim"  : () => kGAMECLASS.prison.prisonCaptor.captorPronoun2,
	"captorhis"  : () => kGAMECLASS.prison.prisonCaptor.captorPronoun3

};
